// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Case {
  id                String              @id @default(cuid())
  fileNo            String              @unique
  clientName        String
  caseType          String
  status            String
  dateOfLoss        String?
  lawyer            String?
  paralegal         String?
  details           Json?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  documents         Document[]
  generatedDocuments GeneratedDocument[]
  chatHistory       ChatMessage[]
  annotations       DocumentAnnotation[]
}

model Document {
  id          String               @id @default(cuid())
  name        String
  type        String               // DOCUMENT, MEMO, DENIAL
  contentType String?              // MIME type
  size        String
  path        String               // File path on disk
  url         String?              // Optional URL for external documents
  content     String?              @db.Text // Extracted text content for searching
  metadata    Json?                // Additional metadata
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  case        Case                 @relation(fields: [caseId], references: [id])
  caseId      String
  versions    DocumentVersion[]
  annotations DocumentAnnotation[]

  @@index([caseId])
  @@index([type])
}

model DocumentVersion {
  id          String   @id @default(cuid())
  documentId  String
  document    Document @relation(fields: [documentId], references: [id])
  version     Int
  path        String
  changes     String?  @db.Text
  createdAt   DateTime @default(now())
  createdBy   String?

  @@unique([documentId, version])
}

model DocumentAnnotation {
  id          String   @id @default(cuid())
  documentId  String
  document    Document @relation(fields: [documentId], references: [id])
  caseId      String
  case        Case     @relation(fields: [caseId], references: [id])
  content     String   @db.Text
  type        String   // COMMENT, HIGHLIGHT, SUMMARY
  position    Json?    // Position in document
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([documentId])
  @@index([caseId])
}

model Form {
  id         String   @id @default(cuid())
  name       String
  type       String
  category   String
  fileName   String
  fileType   String
  fileSize   String
  url        String
  content    String?  @db.Text    // Extracted text content
  metadata   Json?                // Additional metadata
  uploadDate DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([type, category])
}

model ResourceDocument {
  id          String   @id @default(cuid())
  name        String
  type        String   // MANUAL, PRECEDENT, GUIDE, etc.
  category    String   // Which subtab it belongs to
  content     String   @db.Text  // Stored content or path to content
  embedding   Json?    // Vector embedding for search
  metadata    Json?    // Additional metadata
  path        String?  // File path if stored on disk
  url         String?  // URL if external resource
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([type, category])
}

model GeneratedDocument {
  id          String   @id @default(cuid())
  name        String
  type        String   // MEMO, REPORT, etc.
  content     String   @db.Text
  format      String   // DOCX, PDF, etc.
  path        String   // File path on disk
  metadata    Json?    // Additional metadata
  caseId      String
  case        Case     @relation(fields: [caseId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([caseId])
}

model ChatMessage {
  id        String   @id @default(cuid())
  caseId    String
  case      Case     @relation(fields: [caseId], references: [id])
  role      String   // user, assistant
  content   String   @db.Text
  metadata  Json?    // Additional context or references
  createdAt DateTime @default(now())

  @@index([caseId])
}